components:
  schemas:
    Author:
      properties:
        avatar:
          format: path
          title: Avatar
          type: string
        biography:
          title: Biography
          type: string
        name:
          title: Name
          type: string
        nature:
          $ref: '#/components/schemas/AuthorType'
      required:
      - name
      - nature
      title: Author
      type: object
    AuthorType:
      description: Weather or not note was created by robot or a human being.
      enum:
      - machine
      - human
      title: AuthorType
      type: string
    BaseAuthor:
      properties:
        name:
          title: Name
          type: string
        nature:
          $ref: '#/components/schemas/AuthorType'
      required:
      - name
      - nature
      title: BaseAuthor
      type: object
    CreateAuthor:
      properties:
        avatar:
          format: binary
          title: Avatar
          type: string
        biography:
          title: Biography
          type: string
        name:
          title: Name
          type: string
        nature:
          $ref: '#/components/schemas/AuthorType'
      required:
      - name
      - nature
      - avatar
      title: CreateAuthor
      type: object
    CreateNote:
      properties:
        content:
          title: Content
          type: string
        owner_id:
          title: Owner Id
          type: integer
        title:
          title: Title
          type: string
      required:
      - title
      - owner_id
      title: CreateNote
      type: object
    Note:
      properties:
        authors:
          items:
            $ref: '#/components/schemas/Author'
          title: Authors
          type: array
        content:
          title: Content
          type: string
        created:
          format: date-time
          title: Created
          type: string
        id:
          format: uuid
          title: Id
          type: string
        owner_id:
          title: Owner Id
          type: integer
        title:
          title: Title
          type: string
      required:
      - title
      - owner_id
      - id
      - created
      title: Note
      type: object
info:
  title: Notes API
  version: 0.0.1
openapi: 3.0.0
paths:
  /authors:
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - Authors
  /authors/{name}:
    put:
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/mixed:
            schema:
              properties:
                author:
                  $ref: '#/components/schemas/BaseAuthor'
                avatar:
                  format: binary
                  type: string
                biography:
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - Authors
  /authors/{name}/avatar:
    put:
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - Authors
  /authors/{name}/biography:
    put:
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - Authors
  /notes:
    get:
      parameters:
      - example: 10
        in: query
        name: offset
        required: true
        schema:
          minimum: 0
          type: integer
      - examples:
          high:
            summary: Large portions
            value: 20
          low:
            summary: Small portions
            value: 10
        in: query
        name: limit
        required: false
        schema:
          default: 25
          type: integer
      - allowEmptyValue: true
        deprecated: true
        description: Is publisher alive
        in: query
        name: authorType
        required: false
        schema:
          enum:
          - machine
          - human
          type: string
      - in: query
        name: sort_string
        required: false
        schema:
          default: ''
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Note'
                type: array
          description: List of notes.
      summary: List notes.
      tags:
      - Notes
    post:
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNote'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Object created.
      summary: Create a note.
      tags:
      - Notes
  /notes/{id}:
    get:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Note's detail.
      summary: Read full note object.
      tags:
      - Notes
    patch:
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: Update note with fields from object.
      summary: Change some fields in Note.
      tags:
      - Notes
  /notes/{id}/author:
    post:
      deprecated: true
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAuthor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: Updated list of note's authors
      summary: Add author of note.
      tags:
      - Authors
  /stream/authors/{name}:
    put:
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/mixed:
            schema:
              properties:
                author:
                  $ref: '#/components/schemas/BaseAuthor'
                avatar:
                  format: binary
                  type: string
                biography:
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      summary: Create author with bit avatar file without loading it to memory.
      tags:
      - Authors
